@{
    Layout = "~/Views/Shared/_BackBtnLayout.cshtml";
}
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@using PoolComVnWebClient.DTO;
@model ManagerDTO;
@{
    string email = HttpContextAccessor.HttpContext.Request.Cookies["Email"];
}
<div class="container-full">
    <div class="news-manage">
        <div class="manage-account d-flex">
            <a asp-controller="Manager" asp-action="Index" class="manager-account account active">Quản lí</a>
            <a asp-controller="Manager" asp-action="ClubAccount" class="club-account account mx-2">Tài khoản Câu lạc bộ</a>
            <a asp-controller="Manager" asp-action="UserNormalAccount" class="user-account account mx-2">Tài khoản thường</a>
        </div>

        <!-- Manager account Start-->
        <div class="manager-content">
            <div class="mt-5 d-flex justify-content-between">
                <a href="@Url.Action("CreateManageAccount", "Manager")" class="addBtn-account d-flex justify-content-center align-items-center m-0">
                    Tạo tài khoản
                    <i class="fa-solid fa-user-plus px-3"></i>
                </a>
                <div class="mt-2 d-flex justify-content-end">
                    <form method="get" action="@Url.Action("Index", "Manager")">
                        <div class="manageSearch d-flex">
                            <input class="news-input" name="searchQuery" placeholder="Email,..." value="@ViewBag.SearchQuery" />
                            <button type="submit" class="searchBtn px-3 align-items-center">
                                <i class="fa-solid fa-magnifying-glass"></i>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="manage-body mt-3">
                @if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
                {
                    <div class="alert alert-danger" role="alert" style="border-radius:0;">
                        @TempData["ErrorMessage"]
                    </div>
                }
                <table>
                    <tr>
                        <th class="news-id">#</th>
                        @*                         <th class="text-center">Ảnh</th>*@
                        <th class="update-date">Email đăng kí</th>
                        <th class="text-center w150">Số điện thoại</th>
                        <th class="text-center w150">Loại tài khoản</th>
                        <th class="text-center account-status w150">
                            Trạng thái
                            <i class="fa-solid fa-caret-down fa-flip"></i>
                            <ul class="type-list">
                                <li>Hoạt động</li>
                                <li>Khóa</li>
                            </ul>
                        </th>
                        <th class="w100 text-center">Hành động</th>
                    </tr>
                    @foreach (var account in Model.PaginatedManagerAccounts.Items)
                    {
                        <tr>
                            <td>@account.AccountID</td>
                            @* <td>
                        <div class="img-frame-account">
                        <img src="@account" />
                        </div>
                        </td> *@
                            <td>@account.Email</td>
                            <td class="text-center">@account.PhoneNumber</td>
                            <td class="text-center">
                                @{
                                    string role = "";
                                    if (account.RoleID == 1)
                                    {
                                        role = "Admin";
                                    }
                                    else if (account.RoleID == 2)
                                    {
                                        role = "User";
                                    }
                                    else if (account.RoleID == 3)
                                    {
                                        role = "Business";
                                    }
                                    else
                                    {
                                        role = "Manager";
                                    }
                                }
                                @role
                            </td>
                            <td class="status">
                                @if (account.Status)
                                {
                                    <div class="user-status isActive">Hoạt động</div>
                                }
                                else
                                {
                                    <div class="user-status isUnActive">Khóa</div>
                                }
                            </td>
                            <td class="text-center">
                                @if (account.Status)
                                {
                                    <a href="#"><i class="ban-btn fa-solid fa-lock-open p-2" data-manager-id="@account.AccountID"></i></a>
                                }
                                else
                                {
                                    <a href="#"><i class="ban-btn fa-solid fa-lock p-2" data-manager-id="@account.AccountID"></i></a>
                                }
                            </td>
                        </tr>
                    }
                </table>
            </div>

            @{
                // Định nghĩa ngưỡng cần hiển thị dấu "..."
                int threshold = 1;

                // Tính toán danh sách phân trang cần hiển thị
                List<int> displayedPages = new List<int>();
                bool showLeadingDots = false;
                bool showTrailingDots = false;

                for (int pageNum = 1; pageNum <= Model.PaginatedManagerAccounts.TotalPages; pageNum++)
                {
                    if (pageNum == 1 || pageNum == Model.PaginatedManagerAccounts.TotalPages || Math.Abs(pageNum - Model.PaginatedManagerAccounts.PageIndex) <= threshold)
                    {
                        displayedPages.Add(pageNum);
                    }
                    else if (pageNum < Model.PaginatedManagerAccounts.PageIndex - threshold && !showLeadingDots)
                    {
                        displayedPages.Add(-1); // Placeholder for leading dots
                        showLeadingDots = true;
                    }
                    else if (pageNum > Model.PaginatedManagerAccounts.PageIndex + threshold && !showTrailingDots)
                    {
                        displayedPages.Add(-1); // Placeholder for trailing dots
                        showTrailingDots = true;
                    }
                }

                // Hàm JavaScript để chuyển đến trang
                string goToPageFunction = "goToPage";

                // Định dạng mã HTML cho phân trang
                <div class="pagination d-flex justify-content-center align-items-center m-0 mt-4">
                    <div class="pagination-content d-flex justify-content-center align-items-center m-0">
                        <div class="pagination-btn-big" onclick="prevPage()">Trước</div>
                        @foreach (int pageNum in displayedPages)
                        {
                            if (pageNum == -1)
                            {
                                <div class="pagination-more">...</div>
                            }
                            else
                            {
                                <div class="pagination-btn @(pageNum == Model.PaginatedManagerAccounts.PageIndex ? "active" : "")" onclick="@($"{goToPageFunction}({pageNum}, '{@ViewBag.SearchQuery}')")">@pageNum</div>
                            }
                        }
                        <div class="pagination-btn-big" onclick="nextPage()">Sau</div>
                    </div>
                </div>
            }
        </div>
        <!-- Manager account End-->
    </div>
</div>

<script>
    const backBtn = document.querySelector('.back-btn');
     if (backBtn !== null) {
        backBtn.addEventListener('click', () => {
            window.location.href = '/home/index';
        });
    }

    // Handle ban btn
    const banBtnList = document.querySelectorAll('.ban-btn');
    banBtnList.forEach(btn => {
        btn.addEventListener('click', async (e) => {
            e.preventDefault();
            const managerId = btn.dataset.managerId;
            try {
                const response = await fetch(`https://localhost:5000/api/Account/ChangeBusinessManagerStatus/${managerId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                if (response.ok) {
                    const trParent = btn.closest('tr');
                    const clubStatus = trParent.querySelector('.user-status');
                    if (btn.classList.contains('fa-lock-open')) {
                        btn.classList.remove('fa-lock-open');
                        btn.classList.add('fa-lock');
                        clubStatus.classList.remove('isActive');
                        clubStatus.classList.add('isUnActive');
                        clubStatus.textContent = 'Khóa';
                    } else {
                        btn.classList.add('fa-lock-open');
                        btn.classList.remove('fa-lock');
                        clubStatus.classList.add('isActive');
                        clubStatus.classList.remove('isUnActive');
                        clubStatus.textContent = 'Hoạt động';
                    }
                } else {
                    console.error('Error calling API:', response.statusText);
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });
    });


    //Handle click nav
    const accountTypeBtnList = document.querySelectorAll('.account');
    accountTypeBtnList.forEach(accountTypeBtn => {
        accountTypeBtn.addEventListener('click', () => {
            accountTypeBtnList.forEach(btn => {
                btn.classList.remove('active');
            })
            accountTypeBtn.classList.add('active');
        })
    })

    //Handle each btn on nav
    const managerAcc = document.querySelector('.manager-account');
    const clubAcc = document.querySelector('.club-account');
    const userAcc = document.querySelector('.user-account');

    const managerContent = document.querySelector('.manager-content');
    const clubContent = document.querySelector('.club-content');
    const userContent = document.querySelector('.user-content');

    managerAcc.addEventListener('click', () => {
        offActiveBtn();
        managerContent.classList.remove('d-none');
    });

    clubAcc.addEventListener('click', () => {
        offActiveBtn();
        clubContent.classList.remove('d-none');
    });

    userAcc.addEventListener('click', () => {
        offActiveBtn();
        userContent.classList.remove('d-none');
    });


    function offActiveBtn() {
        if (!managerContent.classList.contains('d-none')) {
            managerContent.classList.add('d-none');
        }
        if (!clubContent.classList.contains('d-none')) {
            clubContent.classList.add('d-none');
        }
        if (!userContent.classList.contains('d-none')) {
            userContent.classList.add('d-none');
        }
    }

    var currentPageManager = @Model.PaginatedManagerAccounts.PageIndex;

    //phân trang quản lý
    function prevPage() {
        var searchQuery = '@ViewBag.SearchQuery';
        if (currentPageManager > 1) {
            goToPage(currentPageManager - 1, searchQuery);
        }
    }

    function nextPage() {
        var totalPages = @Model.PaginatedManagerAccounts.TotalPages;
        var searchQuery = '@ViewBag.SearchQuery';
        if (currentPageManager < totalPages) {
            goToPage(currentPageManager + 1, searchQuery);
        }
    }


    function goToPage(pageNum, searchQuery) {
        var url = '@Url.Action("Index", "Manager")';
        url += '?page=' + pageNum;
        if (searchQuery) {
            url += '&searchQuery=' + searchQuery;
        }
        window.location.href = url;
    }

</script>