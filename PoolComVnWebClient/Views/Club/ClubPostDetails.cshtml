@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    Layout = "~/Views/Shared/_ClubLayout.cshtml";
}
@{
    string email = HttpContextAccessor.HttpContext.Request.Cookies["Email"];
}
@using PoolComVnWebClient.DTO
@using System.Web
@model ClubPostDTO
<script src="https://cdn.ckeditor.com/ckeditor5/41.1.0/classic/ckeditor.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<div class="dashboard-container">
    <div class="row news-details m-0">
        <div class="news-detail">
            @if (ViewBag.AccountEmail == email)
            {
                <button id="editBtn" class="mt-3">Chỉnh sửa bài viết</button>
            }
            <div class="news-detail-bg mt-4">
                <div class="d-flex justify-content-center">
                    <img src="@Model.Flyer" />
                </div>
                <div class="news-title px-lg-5 px-0">@Model.Title</div>
                <div class="news-description px-lg-5 px-0"> @Html.Raw(HttpUtility.HtmlDecode(@Model.Description.Replace("<img ", "<img class='ck-img' ")))</div>
            </div>
        </div>
    </div>
    <div class="add-news d-flex justify-content-end d-none mt-0 mx-lg-5 mx-md-0 ">
        <div style="width:100%;">
            <div class="box-header">Chi tiết bài viết</div>
            <form id="news-form" method="post" asp-controller="Club" asp-action="UpdateClubPost" enctype="multipart/form-data">
                <input type="hidden" asp-for="ClubId" value="@Model.ClubId" />
                <input type="hidden" asp-for="CreatedDate" value="@Model.CreatedDate" />
                <input type="hidden" asp-for="UpdatedDate" value="@Model.UpdatedDate" />
                <input type="hidden" asp-for="PostId" value="@Model.PostId" />
                <input type="hidden" asp-for="Flyer" value="@Model.Flyer" />
                <div class="box-body row py-5 m-0">
                    <div class="col-lg-12 px-5 pt-2">
                        <strong class="mt-1">Tiêu đề</strong>
                        <input type="text" class="nameInput mt-1" id="news-title" asp-for="Title" value="@Model.Title"/>
                        <div class="text-danger nameErr px-2 py-1"></div>
                    </div>
                    <div class="col-lg-12 px-5 pt-2">
                        <strong class="mt-1">Mô tả chi tiết</strong>
                        <div class="form-group">
                            <textarea asp-for="Description" class="form-control"
                            style="min-height: 200px;"></textarea>
                        </div>
                        <div class="text-danger descErr px-2 py-1"></div>
                    </div>
                    <div class="col-lg-12 px-5 pt-2">
                        <strong class="mt-1">Ảnh đại diện</strong>
                        <div class="display-content">
                            <div class="upload-img">
                                <div class="m-0 preview-image" style="background-image: url(@Model.Flyer);"></div>
                                <input type="file" class="imageInput mt-1" name="BannerFile" accept="image/*" />
                                <input id="file-name" name="BannerFile" class="d-none" />
                            </div>
                        </div>
                        <div class="text-danger bannerErr px-2 py-1"></div>
                    </div>
                    <div class="col-lg-12 px-5 pt-5">
                        <strong for="statusToggle">Trạng thái</strong>
                        <input type="hidden" name="Status" value="false" />
                        <div class="d-flex align-items-center mt-2">
                            <input type="checkbox" id="statusToggle" name="Status" style="width:16px; height:16px"
                            @(Model.Status.HasValue && Model.Status.Value ? "checked" : "") onchange="changeStatus()" /> 
                            <span class="mx-2" style="line-height:16px;">Hiển thị bài viết</span>
                        </div>
                    </div>

                    <div class="col-lg-12 px-5 pt-5 d-flex justify-content-start">
                        <button type="submit" class="btn btn-success">Chỉnh sửa</button>
                        <a asp-action="ClubPostDetails" asp-controller="Club" asp-route-id="@Model.PostId" asp-route-clubid="@Model.ClubId" 
                        class="mx-3 btn btn-danger">HỦY</a>
                    </div>
                    <div class="col-lg-6 px-5 pt-5" id="form-message"></div>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    const backBtn = document.querySelector('.back-btn');
    if (backBtn !== null) {
        backBtn.addEventListener('click', () => {
            window.location.href = document.referrer;
        });
    }

    const imgInput = document.querySelector('#file-name');
    document.querySelector('.imageInput').addEventListener('change', function (event) {
        const imageInput = event.target;
        const previewImage = document.querySelector('.preview-image');
        const selectedFileName = document.querySelector('#file-name');
        const uploadTile = document.querySelector('.upload-title');

        if (imageInput.files && imageInput.files[0]) {
            const reader = new FileReader();

            reader.onload = function (e) {
                previewImage.style.backgroundImage = 'url(' + e.target.result + ')';
                previewImage.style.display = 'block';
                uploadTile.classList.add('d-none');
            };

            reader.readAsDataURL(imageInput.files[0]);
            selectedFileName.value = imageInput.files[0].name;
        }
    });
    class MyUploadAdapter {
        constructor(loader) {
            this.loader = loader;
        }

        upload() {
            return this.loader.file
                .then(file => new Promise((resolve, reject) => {
                    this._initRequest();
                    this._initListeners(resolve, reject, file);
                    this._sendRequest(file);
                }));
        }
        abort() {
            if (this.xhr) {
                this.xhr.abort();
            }
        }
        _initRequest() {
            const xhr = this.xhr = new XMLHttpRequest();
            xhr.open('POST', '@Url.Action("UploadImage","NewsManage")', true);
            xhr.responseType = 'json';
        }
        _initListeners(resolve, reject, file) {
            const xhr = this.xhr;
            const loader = this.loader;
            const genericErrorText = `Couldn't upload file: ${file.name}.`;

            xhr.addEventListener('error', () => reject(genericErrorText));
            xhr.addEventListener('abort', () => reject());
            xhr.addEventListener('load', () => {
                const response = xhr.response;
                if (!response || response.error) {
                    return reject(response && response.error ? response.error.message : genericErrorText);
                }
                resolve({
                    default: response.url
                });
            });
            if (xhr.upload) {
                xhr.upload.addEventListener('progress', evt => {
                    if (evt.lengthComputable) {
                        loader.uploadTotal = evt.total;
                        loader.uploaded = evt.loaded;
                    }
                });
            }
        }
        _sendRequest(file) {

            const data = new FormData();

            data.append('upload', file);
            this.xhr.send(data);
        }

    }
    function MyCustomUploadAdapterPlugin(editor) {
        editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {

            return new MyUploadAdapter(loader);
        };
    }
    $(document).ready(function () {
        $('#editBtn').click(function () {
            $('.news-details').addClass('d-none');
            $('.add-news').removeClass('d-none');


            ClassicEditor
                .create(document.querySelector('#Description'), {
                    extraPlugins: [MyCustomUploadAdapterPlugin],
                })
                .catch(error => {
                    console.log(error);
                });
        });
    });

    function changeStatus() {
        var statusToggle = document.getElementById('statusToggle');
        var statusLabel = document.querySelector('.form-check-label');
        statusToggle.previousElementSibling.value = statusToggle.checked ? "true" : "false";
    }

</script>
